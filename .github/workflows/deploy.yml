name: Deploy to Production

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test:ci

    - name: Build for production
      run: npm run build

    - name: Deploy to Firebase Hosting
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
        projectId: coralcrave
        channelId: live

  deploy-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install backend dependencies
      run: |
        cd server
        npm ci

    - name: Build backend
      run: |
        cd server
        npm run build

    - name: Deploy to Cloud Run
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: coralcrave-server
        source: server
        region: us-central1
        allow-unauthenticated: true
        env_vars: |
          NODE_ENV=production
          AGORA_APP_ID=${{ secrets.AGORA_APP_ID }}
          AGORA_APP_CERTIFICATE=${{ secrets.AGORA_APP_CERTIFICATE }}
          FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}
          REDIS_URL=${{ secrets.REDIS_URL }}
